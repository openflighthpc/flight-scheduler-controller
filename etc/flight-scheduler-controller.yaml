#==============================================================================
# Copyright (C) 2021-present Alces Flight Ltd.
#
# This file is part of FlightSchedulerController.
#
# This program and the accompanying materials are made available under
# the terms of the Eclipse Public License 2.0 which is available at
# <https://www.eclipse.org/legal/epl-2.0>, or alternative license
# terms made available by Alces Flight Ltd - please direct inquiries
# about licensing to licensing@alces-flight.com.
#
# FlightSchedulerController is distributed in the hope that it will be useful, but
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR
# IMPLIED INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OR CONDITIONS
# OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A
# PARTICULAR PURPOSE. See the Eclipse Public License 2.0 for more
# details.
#
# You should have received a copy of the Eclipse Public License 2.0
# along with FlightSchedulerController. If not, see:
#
#  https://opensource.org/licenses/EPL-2.0
#
# For more information on FlightSchedulerController, please visit:
# https://github.com/openflighthpc/flight-scheduler-controller
#==============================================================================

# Auth type.  The authentication type to use.
# Valid values are 'basic', 'munge'.
# Can be set from the environment variable FLIGHT_SCHEDULER_AUTH_TYPE which
# takes precedence over this setting.
# Default: munge
# auth_type: "munge"

# Bind address.  The address for the controller daemon to bind to.
# Can be set from the environment variable FLIGHT_SCHEDULER_BIND_ADDRESS which
# takes precedence over this setting.
# Default: http://127.0.0.1:6307
# bind_address: ""

# The name of the cluster.
# Can be set from the environment variable FLIGHT_SCHEDULER_CLUSTER_NAME which
# takes precedence over this setting.
# Default: the empty string.
# cluster_name: ""

# The prefix used for environment variables set in a job's context.
# Environment variable FLIGHT_SCHEDULER_ENV_VAR_PREFIX takes precedence over this setting.
# Default: the empty string.
# env_var_prefix: ""

# Log level.
# Environment variable FLIGHT_SCHEDULER_LOG_LEVEL takes precedence over this
# setting.
# Default: info
# log_level: info

# Polling Timeout.
# The timeout for long polling requests made to see if a job or job step is
# running.
# Default: 30 seconds
# polling_timeout: 30

# Spool directory.
# Environment variable FLIGHT_SCHEDULER_SPOOL_DIR takes precedence over this
# setting.
# Default: The relative directory ./var/spool.  Relative to the root of the
# flight scheduler installation.
# spool_dir: './var/spool'

# How frequently, in seconds, to run the periodic processor.  The periodic
# processor includes cleaning out the job registry.
# Default: 60 seconds
# timer_interval: 60

# Time, in seconds, for the periodic processor.
# Default: 30 seconds
# timer_timeout: 30

# Scheduler algorithm.  The algorithm to use for allocating nodes to jobs, aka, scheduling.
# Valid values are 'fifo', 'backfilling'.
# Environment variable FLIGHT_SCHEDULER_SCHEDULER_ALGORITHM takes precedence
# over this setting.
# Default: backfilling
# scheduler_algorithm: backfilling

# Maximum number of jobs to consider when running the scheduling loop.
# Default: 50
# scheduler_max_jobs_considered: 50

# The working directory that partition scripts are ran in.
# Environment variable FLIGHT_SCHEDULER_LIBEXEC_DIR
# Default: './libexec'
# libexec_dir: libexec

# Partition status update period
# Default: 3600
# status_update_period: 3600

# The minimum and maximum debouncing periods in seconds
# Min Default: 30 seconds
# Max Default: 600 seconds
# min_debouncing: 30
# max_debouncing: 600

# Generic sleep period
# The generic sleep period used throughout the application in seconds.
# Default: 1 second
# generic_short_sleep:

# Partitions.
partitions:
  - name: all
    default: true
    max_time_limit: 10
    default_time_limit: 1
    # event_scripts:
    #   excess: demo.sh
    #   insufficient: demo.sh
    #   status: demo.sh
    types:
      foobar: {}
    node_matchers:
      name:
        regex: ".*"
  # - name: other
  #   nodes: [node01, node02]
